load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_code.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/wrf/WRFUserARW.ncl"

begin
  FILES = systemfunc (" ls -1 " + "wrfout* ") ; read all input files
  numFILES = dimsizes(FILES)
  print("numFILES = " + numFILES)
  print(FILES)
  print (" ")

; Set some basic resources
  res = True
  res@MainTitle = "WRF: Total precipitation"

  pltres = True                                ; Plotting resources
  mpres = True                                      ; Map resources
  mpres@mpGeophysicalLineColor = "Black"
  mpres@mpGeophysicalLineThicknessF = "2"
  mpres@mpFillBoundarySets = "AllBoundaries"
  mpres@mpNationalLineColor    = "Black"
  mpres@mpGridLineColor        = "Black"
  mpres@mpLimbLineColor        = "Black"
  mpres@mpPerimLineColor       = "Black"
  mpres@mpDataBaseVersion      = "HighRes"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  a = addfiles(FILES+".nc","r")

  times = wrf_user_getvar(a,"times",-1)  ; get all times in the file
  ntimes = dimsizes(times)         ; number of times in the file

  ; Get non-convective, convective and total precipitation
  rain_exp = wrf_user_getvar(a,"RAINNC",-1)
  rain_con = wrf_user_getvar(a,"RAINC",-1)
  rain_tot = rain_exp + rain_con
  rain_tot@description = "Total Precipitation"

  ; just creating new arrays here
  rain_tot_tend = rain_tot
  rain_tot_tend = 0.0
  rain_tot_tend@description = "Precipitation Tendency"

  ; Calculate tendency values
  ; We know our data is available every 3 hours, so setting tend_int to 1 gives
  ; tendencies for 3 hours, setting it to 2, gives 6hourly tendencies
  tend_int = 2
  rain_tot_tend(tend_int:ntimes-1:tend_int,:,:) = rain_tot(tend_int:ntimes-1:tend_int,:,:) - rain_tot(0:ntimes-2:tend_int,:,:)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  do it = 0,ntimes-1,tend_int    ; Let's skip the first time as rain is 0 here

    wks_type = "png"
    wks_type@wkWidth = 2500
    wks_type@wkHeight = 2500
    time_array = str_split(times(it), ":")
    wks = gsn_open_wks(wks_type,"rain_tot_" + time_array(0))

    print("Working on time: " + times(it) )
    res@TimeLabel = times(it)   ; Set Valid time to use on plots


  ; Plotting options for Precipitation
    opts_r = res
    opts_r@UnitLabel            = "mm"
    opts_r@cnLevelSelectionMode = "ExplicitLevels"
    opts_r@cnLevels             = (/ .1, .2, .4, .8, 1.6, 3.2, 6.4, \
                                    12.8, 25.6, 51.2, 102.4, 204.8/)
    opts_r@cnFillColors         = (/"White","White","DarkOliveGreen1", \
                                "DarkOliveGreen3","Chartreuse", \
                                    "Chartreuse3","Green","ForestGreen", \
                                    "Yellow","Orange","Red","Violet","Blue"/)
    opts_r@cnInfoLabelOn        = False
    opts_r@cnConstFLabelOn      = False
    opts_r@cnFillOn             = True


    pltres@PanelPlot = True
    pltres@FramePlot = False
    contour_tot = wrf_contour(a[it],wks, rain_tot(it,:,:), opts_r)
    plot = wrf_map_overlays(a[it],wks,contour_tot,pltres,mpres)
    draw(plot)
    frame(wks)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  end do        ; END OF TIME LOOP

end

